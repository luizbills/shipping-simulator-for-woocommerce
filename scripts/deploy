#!/usr/bin/env bash

# By Luiz Bills based on work by Barry Kooij and Mike Jolley
# License: GPL v3

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>

# ----- START EDITING HERE -----

# The slug of your WordPress.org plugin
WP_PLUGIN_SLUG="shipping-simulator-for-woocommerce"

# GITHUB user who owns the repo
GITHUB_REPO_SLUG="luizbills/shipping-simulator-for-woocommerce"

# folder with plugin icon, banner and screenshots used in https://wordpress.org
PLUGIN_ASSETS_DIR=".wp-org"

# ----- STOP EDITING HERE -----

set -e
clear >$( tty ) # clear the terminal

# ASK INFO
echo "--------------------------------------------"
echo "      Github to WordPress.org RELEASER      "
echo "--------------------------------------------"
read -p "RELEASE VERSION: " VERSION
echo "--------------------------------------------"
echo ""
echo "Before continuing, confirm that you have done the following :)"
echo ""
read -p " - Added a changelog for "${VERSION}"?"
read -p " - Set version in the readme.txt and main file to "${VERSION}"?"
read -p " - Set stable tag in the readme.txt file to "${VERSION}"?"
read -p " - Updated the POT file?"
read -p " - Committed all changes up to GITHUB?"
echo ""
read -p "PRESS [ENTER] TO BEGIN RELEASING "${VERSION}
clear

# VARS
CURRENT_DIR="."
DIR="$( realpath ${CURRENT_DIR} )"
TEMP_GITHUB_REPO="/tmp/${WP_PLUGIN_SLUG}-git"
TEMP_SVN_REPO="/tmp/${WP_PLUGIN_SLUG}-svn"
SVN_REPO="http://plugins.svn.wordpress.org/${WP_PLUGIN_SLUG}/"
GIT_REPO="https://github.com/${GITHUB_REPO_SLUG}.git"

# DELETE OLD TEMP DIRS
rm -Rf $TEMP_GITHUB_REPO
rm -rf $TEMP_SVN_REPO

# CLONE GIT DIR
echo "Cloning GIT repository from GITHUB"
git clone --progress --recurse-submodules $GIT_REPO $TEMP_GITHUB_REPO || { echo "Unable to clone repo."; exit 1; }

# MOVE INTO GIT DIR
cd "$TEMP_GITHUB_REPO"

# LIST BRANCHES
# clear
git fetch origin
echo "WHICH BRANCH DO YOU WISH TO DEPLOY?"
git branch -r || { echo "Unable to list branches."; exit 1; }
echo ""
read -p "origin/" BRANCH

# Switch Branch
echo "Switching to branch"
git checkout ${BRANCH} || { echo "Unable to checkout branch."; exit 1; }

if [[ -f "composer.json" ]];
then
	echo "Installing composer packages"
	composer install --no-dev || { echo "Unable to install composer packages."; exit 1; }
fi

if [[ -f "package.json" ]];
then
	echo "Installing composer packages"
	npm install || { echo "Unable to install npm packages."; exit 1; }
fi

echo "Looking for PHP syntax errors"
find . -type f -name '*.php' ! -path './vendor/*' -print0 | while read -d $'\0' file
do
	output=$(php -l "$file")
	if [ ! $? -eq 0 ];
	then
		#echo "$output"
		echo -e "\e[31mPHP Syntax Error!\e[0m"
		exit 1
	fi
done
echo "No syntax errors found"

# REMOVE UNWANTED FILES & FOLDERS
echo "Removing unwanted files"
rm -Rf .git
rm -Rf .github
rm -Rf tests
rm -Rf docs
rm -Rf scripts
rm -Rf node_modules
rm -f .gitattributes
rm -f .gitignore
rm -f .gitmodules
rm -f .travis.yml
rm -f package-lock.json
rm -f composer.lock
rm -f phpunit.xml
rm -f phpunit.xml.dist
rm -f README.md
rm -f .coveralls.yml
rm -f .editorconfig
rm -f CONTRIBUTING.md
rm -f .gitpod.dockerfile
rm -f .gitpod.yml

echo ""
read -p "PRESS [ENTER] TO DEPLOY BRANCH "${BRANCH}

# CHECKOUT SVN DIR IF NOT EXISTS
echo "Checking out WordPress.org plugin SVN repository"
svn checkout $SVN_REPO $TEMP_SVN_REPO || { echo "Unable to checkout repo."; exit 1; }

# MOVE INTO SVN DIR
cd "$TEMP_SVN_REPO"

# UPDATE SVN
echo "Updating SVN"
svn update || { echo "Unable to update SVN."; exit 1; }

echo "Checking Plugin icon, banner and screenshots ..."
rm -Rf assets/

# DELETE TRUNK
echo "Replacing trunk"
rm -Rf trunk/

# COPY GIT DIR TO TRUNK
cp -a "${TEMP_GITHUB_REPO}/." trunk/

mv trunk/$PLUGIN_ASSETS_DIR assets

# DELETE VERSION TAG
rm -Rf tags/${VERSION}

# DO THE ADD ALL NOT KNOWN FILES UNIX COMMAND
svn add --force * --auto-props --parents --depth infinity -q

# DO THE REMOVE ALL DELETED FILES UNIX COMMAND
MISSING_PATHS=$( svn status | sed -e '/^!/!d' -e 's/^!//' )

# iterate over filepaths
for MISSING_PATH in $MISSING_PATHS;
do
    svn rm --force "$MISSING_PATH"
done

# COPY TRUNK TO TAGS/$VERSION
echo "Copying trunk to new tag"
svn copy trunk tags/${VERSION} || { echo "Unable to create tag."; exit 1; }

# DO SVN COMMIT
# clear
echo "Showing SVN status"
svn status

# PROMPT USER
echo ""
read -p "PRESS [ENTER] TO COMMIT RELEASE "${VERSION}" TO WORDPRESS.ORG"
echo ""

# DEPLOY
echo ""
echo "Committing to WordPress.org...this may take a while..."
svn commit -m "Release "${VERSION}", see readme.txt for the changelog." || { echo "Unable to commit."; exit 1; }

# REMOVE THE TEMP DIRS
echo "CLEANING UP"
rm -Rf "$TEMP_GITHUB_REPO"
rm -Rf "$TEMP_SVN_REPO"

# DONE, BYE
echo "RELEASER DONE :D"
